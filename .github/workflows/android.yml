name: Android CI

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '.idea/**'
      - 'fastlane/**'
      - '!.github/workflows/**'
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Checkout source code
      - uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # Cache Gradle build directory to speed up subsequent builds
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build APK with Gradle
      - name: Build with Gradle
        run: ./gradlew :androidApp:assembleSnapshotChannelRichCodecRelease

      # Create Git Tag
      - name: Create Tag
        id: create_tag
        run: |
          VERSION=$(date +"%Y.%m.%d-%H.%M.%S")
          echo "Tag version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV
          git tag -a "$VERSION" -m "Release $VERSION"
          git push origin "$VERSION"

      # Upload APK to Release
      - name: Create Release and Upload APK
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version }}
          name: "Release ${{ env.version }}"
          body: "Automatically generated release from CI/CD pipeline"
          draft: false
          prerelease: true
          files: "androidApp/build/outputs/apk/snapshotChannelRichCodec/release/*.apk"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
